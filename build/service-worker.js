"use strict";var precacheConfig=[["/index.html","c50eaf8a146a97f2309de6d01518af9c"],["/static/css/main.5e0143b5.css","3e872900e0ee615c844d3eee110efada"],["/static/media/Aeonik-Air.86f5daa3.woff2","86f5daa3d6a0f918f3d3c287958ca00a"],["/static/media/Aeonik-Air.f46dc425.woff","f46dc425cfb237d685f8ff946f9a8ad8"],["/static/media/Aeonik-Black.8812272d.woff","8812272d2085bdbce32e65e5411053f3"],["/static/media/Aeonik-Black.c757fc64.woff2","c757fc6465739a70a91a11b694479188"],["/static/media/Aeonik-Bold.b1bead74.woff","b1bead74c6a3a6d13524feced69c35da"],["/static/media/Aeonik-Bold.bc0612df.woff2","bc0612df044cb6c8c8437bfcd10954a3"],["/static/media/Aeonik-Regular.37e29050.woff2","37e2905077e7311655e9ba09630344f9"],["/static/media/Aeonik-Regular.d5f7ae78.woff","d5f7ae78217968a570075830cb9d66a1"],["/static/media/Earn-Passive-respon.4aebd979.png","4aebd979f125a291898cf5a63c346bd3"],["/static/media/Use-By-Million-respon.7059ae05.png","7059ae059932ecba14b8b6451b67487b"],["/static/media/aboutimg.1b21884c.png","1b21884cd04ace222d06311da9b48777"],["/static/media/arrow.62a0f725.png","62a0f72542f950c7bade0551051a104c"],["/static/media/bnrimg.713242be.png","713242beb897e7e04bdea6b66334420f"],["/static/media/crosss.2467acb0.png","2467acb005ffed74201a2da888fee680"],["/static/media/img2.1b21884c.png","1b21884cd04ace222d06311da9b48777"],["/static/media/slick.b7c9e1e4.woff","b7c9e1e479de3b53f1e4e30ebac2403a"],["/static/media/slick.ced611da.eot","ced611daf7709cc778da928fec876475"],["/static/media/slick.d41f55a7.ttf","d41f55a78e6f49a5512878df1737e58a"],["/static/media/slick.f97e3bbf.svg","f97e3bbf73254b0112091d0192f17aec"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){e=new URL(e);return"/"===e.pathname.slice(-1)&&(e.pathname+=t),e.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){e=new URL(e);return n&&e.pathname.match(n)||(e.search+=(e.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),e.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){e=new URL(e);return e.hash="",e.search=e.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),e.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],e=e[1],t=new URL(t,self.location),e=createCacheKey(t,hashParamName,e,/\.\w{8}\./);return[t.toString(),e]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){var e;if(!a.has(t))return e=new Request(t,{credentials:"same-origin"}),fetch(e).then(function(e){if(e.ok)return cleanResponse(e).then(function(e){return n.put(t,e)});throw new Error("Request for "+t+" returned a response with status "+e.status)})}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){var a,e,n;"GET"===t.request.method&&(a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html",(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a)),n="/index.html",!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(n,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)})))});